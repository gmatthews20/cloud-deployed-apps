apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: cloud-deployed-apps
  namespace: argocd
spec:
  destination:
    namespace: argocd
    server: https://kubernetes.default.svc
  project: default
  source:
    repoURL: https://github.com/stfc/cloud-deployed-apps.git
    targetRevision: Port_jhub
    path: clusters/dev/david-jhub
  syncPolicy:
    automated:
      prune: false
      selfHeal: true
      allowEmpty: true
    syncOptions:
      - CreateNamespace=true

---

apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
    name: management-apps
    namespace: argocd
spec:
  goTemplate: true
  goTemplateOptions: ["missingkey=error"]
  generators:
    - list:
        elements:
        - name: "argocd"
          chartName: argocd
          valuesFile: ../../../clusters/dev/david-jhub/argocd-setup-values.yaml
          namespace: argocd

        - name: "cert-manager"
          chartName: cert-manager
          namespace: cert-manager
          valuesFile: ../../../clusters/dev/david-jhub/argocd-setup-values.yaml

        - name: jupyterhub
          chartName: jupyterhub
          namespace: jupyterhub
          secretsFile: ../../../secrets/dev/david-jhub/jupyterhub-secrets.yaml
          valuesFile: ../../../clusters/dev/david-jhub/jupyter-values.yaml

  ignoreApplicationDifferences:
    - jsonPointers:
        - /spec/syncPolicy
            
  syncPolicy:
    preserveResourcesOnDeletion: true 

  template:
      metadata:
        name: '{{ .name }}'
        namespace: argocd
      spec:
        project: default
        source:
          repoURL: "https://github.com/stfc/cloud-deployed-apps.git"
          targetRevision: Port_jhub
          path: "charts/dev/{{ .chartName }}"
          helm:
            valueFiles:
              - "{{ .valuesFile }}"
              {{- if .secretsFile }}
              - "{{ .secretsFile }}"
              {{- end }}
        destination:
            server: https://kubernetes.default.svc
            namespace: "{{ .namespace }}"
        
        # apps are easy to deploy - so we can cascade delete them
        syncPolicy:
          automated:
            prune: true
            selfHeal: true
            allowEmpty: true
          syncOptions:
            - CreateNamespace=true
